name: Flask App CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask werkzeug pytest flake8
        
    - name: Lint with flake8
      run: |
        flake8 . --count --max-line-length=120 --statistics
        
    # Uncomment when you add tests
    # - name: Run tests
    #   run: |
    #     pytest

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/flask-file-upload:latest
        
  # Uncomment and customize this job when you're ready to deploy
  # deploy:
  #   needs: build-and-push
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
  #   steps:
  #   - name: Deploy to server
  #     uses: appleboy/ssh-action@master
  #     with:
  #       host: ${{ secrets.SERVER_HOST }}
  #       username: ${{ secrets.SERVER_USERNAME }}
  #       key: ${{ secrets.SERVER_SSH_KEY }}
  #       script: |
  #         docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/flask-file-upload:latest
  #         docker stop flask-app || true
  #         docker rm flask-app || true
  #         docker run -d --name flask-app -p 80:5000 ${{ secrets.DOCKER_HUB_USERNAME }}/flask-file-upload:latest
